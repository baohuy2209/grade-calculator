services:
  grades-db:
    container_name: grade-calculator-db
    environment:
      POSTGRES_DB: "grades"
      POSTGRES_USER: "grades"

      # Set this to your own secure database password
      # Example:            openssl rand -base64 32
      # Or the equivalent:  https://generate.plus/en/base64?gp_base64_base%5Blength%5D=32
      POSTGRES_PASSWORD: "<YOUR_PASSWORD>"
    healthcheck:
      interval: 10s
      retries: 10
      test: ["CMD-SHELL", "pg_isready -U grades -d grades"]
      timeout: 2s
    image: "postgres:17-alpine"
    restart: unless-stopped
    command: -c 'max_connections=200'
    volumes:
      - "grade-calculator:/var/lib/postgresql/data"

  grades-web:
    container_name: grade-calculator-web
    ports:
      # Set to your own port if desired, or remove it if you want to use a reverse proxy
      # If you use a reverse proxy, let me know if there are issues here:
      # https://github.com/nstr-dev/grade-calculator/issues/new/choose
      - 3122:3000
    depends_on:
      - grades-db
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3000 || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    build:
      context: .
      dockerfile: selfhosting/Dockerfile
    environment:
      # Disables authentication entirely when set to true or 1
      # Discouraged, only use this when you are the only person to access the application
      - NO_AUTH=false

      # OIDC settings for custom OIDC providers, shows up if all properties are set
      # OAuth Name will be displayed in the login page.
      - CUSTOM_OAUTH_CLIENT_ID=
      - CUSTOM_OAUTH_SECRET=
      - "CUSTOM_OAUTH_WELLKNOWN_URL="
      - CUSTOM_OAUTH_NAME=

      # Discord OAuth, shows up if id and secret are set
      # Create an OAuth application here: https://discord.com/developers/applications
      - DISCORD_ID=
      - DISCORD_SECRET=

      # GitHub OAuth, shows up if id and secret are set
      # Create an OAuth application here: https://github.com/settings/apps

      - GITHUB_ID=
      - GITHUB_SECRET=
      # Google OAuth, shows up if id and secret are set
      # Create an OAuth application here: https://console.developers.google.com/apis/credentials

      - GOOGLE_ID=
      - GOOGLE_SECRET=

      # Set this to your own secure secret
      # Example:            openssl rand -base64 32
      # Or the equivalent:  https://generate.plus/en/base64?gp_base64_base%5Blength%5D=32
      - NEXTAUTH_SECRET=<YOUR_SECRET>

      # If needed, set this to the URL you want to access the grade calculator from
      # If using a reverse proxy, set this to the public URL
      # Examples:
      # https://grades.example.org
      # http://192.168.1.3:3122
      - NEXTAUTH_URL=http://localhost:3122

      # You must change the POSTGRES_PASSWORD and the POSTGRES_URL to match the password for the DB-Container
      # Leave the rest as is.
      - POSTGRES_DATABASE=grades
      - POSTGRES_HOST=grades-db
      - POSTGRES_USER=grades

      - POSTGRES_PASSWORD=<YOUR_PASSWORD>
      - POSTGRES_URL=postgres://grades:<YOUR_PASSWORD>@grades-db/grades

      # Valid log levels: trace, debug, info, warn, error
      - LOG_LEVEL=info

volumes:
  grade-calculator:
