name: Tag Docker Images on Git Tag

on:
  push:
    tags:
      - "*"

jobs:
  tag-docker-image:
    runs-on: ubuntu-latest
    container:
      image: golang:alpine
    env:
      REGISTRY: docker.atlas.nstr.dev
      IMAGE_NAME: grade-calculator
      DOCKER_REGISTRY_USERNAME: ${{ secrets.DOCKER_REGISTRY_USERNAME }}
      DOCKER_REGISTRY_TOKEN: ${{ secrets.DOCKER_REGISTRY_TOKEN }}

    steps:
      - name: Install crane
        run: |
          apk add --no-cache coreutils git && go install github.com/google/go-containerregistry/cmd/crane@latest

      - name: Checkout repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Mark workspace safe for Git
        run: git config --global --add safe.directory "$GITHUB_WORKSPACE"

      - name: Get commit SHA for tag
        id: get_sha
        run: |
          COMMIT_SHA=$(git rev-list -n 1 $GITHUB_REF_NAME)
          echo "COMMIT_SHA=$COMMIT_SHA" >> $GITHUB_ENV
          echo "Resolved git tag $GITHUB_REF_NAME to commit SHA $COMMIT_SHA"

      - name: Crane Login
        run: |
          crane auth login $REGISTRY --username $DOCKER_REGISTRY_USERNAME --password $DOCKER_REGISTRY_TOKEN

      - name: Wait for image to exist
        run: |
          echo "Waiting up to 10 minutes for $REGISTRY/$IMAGE_NAME:${COMMIT_SHA}..."
          timeout 600s sh -c '
            until crane manifest '"$REGISTRY/$IMAGE_NAME:${COMMIT_SHA}"'; do
              echo "Not available yet... retrying in 5s"
              sleep 5
            done
          '
          echo "Image is now available!"

      - name: Tag in private registry
        run: |
          echo "Copying $REGISTRY/$IMAGE_NAME:${COMMIT_SHA} to $REGISTRY/$IMAGE_NAME:${GITHUB_REF_NAME}"
          crane copy $REGISTRY/$IMAGE_NAME:${COMMIT_SHA} $REGISTRY/$IMAGE_NAME:${GITHUB_REF_NAME}
          if [[ "$GITHUB_REF_NAME" == v* ]]; then
            VERSION=${GITHUB_REF_NAME#v}
            crane copy $REGISTRY/$IMAGE_NAME:${COMMIT_SHA} $REGISTRY/$IMAGE_NAME:${VERSION}
          fi

      - name: Finish image tagging
        run: echo "✅ Tagged normal image in registry"

  tag-selfhosted-image:
    runs-on: ubuntu-latest
    container:
      image: golang:alpine
    env:
      IMAGE_NAME: grade-calculator
      DOCKER_HUB_USERNAME: ${{ secrets.DOCKER_HUB_USERNAME }}
      DOCKER_HUB_TOKEN: ${{ secrets.DOCKER_HUB_TOKEN }}

    steps:
      - name: Install crane
        run: |
          apk add --no-cache coreutils git && go install github.com/google/go-containerregistry/cmd/crane@latest

      - name: Checkout repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Mark workspace safe for Git
        run: git config --global --add safe.directory "$GITHUB_WORKSPACE"

      - name: Resolve commit SHA
        id: get_sha
        run: |
          echo "COMMIT_SHA=$(git rev-list -n 1 $GITHUB_REF_NAME)" >> $GITHUB_ENV

      - name: Authenticate to Docker Hub
        run: |
          crane auth login docker.io --username $DOCKER_HUB_USERNAME --password $DOCKER_HUB_TOKEN

      - name: Wait for selfhosted image to appear
        run: |
          echo "Waiting up to 10 minutes for $REGISTRY/$IMAGE_NAME:${COMMIT_SHA}..."
          timeout 600s sh -c '
            until crane manifest "$DOCKER_HUB_USERNAME/$IMAGE_NAME:${COMMIT_SHA}"; do
              echo "Not available yet... retrying in 5s"
              sleep 5
            done
          '
          echo "Image is now available!"

      - name: Tag on Docker Hub
        run: |
          crane copy $DOCKER_HUB_USERNAME/$IMAGE_NAME:${COMMIT_SHA} $DOCKER_HUB_USERNAME/$IMAGE_NAME:${GITHUB_REF_NAME}
          if [[ "$GITHUB_REF_NAME" == v* ]]; then
            VERSION=${GITHUB_REF_NAME#v}
            crane copy $DOCKER_HUB_USERNAME/$IMAGE_NAME:${COMMIT_SHA} $DOCKER_HUB_USERNAME/$IMAGE_NAME:${VERSION}
          fi
          crane copy $DOCKER_HUB_USERNAME/$IMAGE_NAME:${COMMIT_SHA} $DOCKER_HUB_USERNAME/$IMAGE_NAME:latest

      - name: Finish selfhosted‐image tagging
        run: echo "✅ Tagged selfhosted image on Docker Hub"
